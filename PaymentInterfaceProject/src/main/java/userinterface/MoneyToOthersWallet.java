/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package userinterface;

import business.mysql.MySql;
import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static userinterface.UserHomePage.balanceLabel;
import static userinterface.UserHomePage.userNameLabel;

/**
 *
 * @author nbabu
 */
public class MoneyToOthersWallet extends javax.swing.JFrame {

    /**
     * Creates new form MoneyToOthersWallet
     */
    public MoneyToOthersWallet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sendMoneyButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        mobileField = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        mobileLabel = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sendMoneyButton.setText("Send Money");
        sendMoneyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMoneyButtonActionPerformed(evt);
            }
        });
        jPanel1.add(sendMoneyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 280, -1));

        jLabel1.setText("Amount:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 130, -1));

        mobileField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mobileFieldKeyReleased(evt);
            }
        });
        jPanel1.add(mobileField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 140, -1));

        amountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountFieldKeyReleased(evt);
            }
        });
        jPanel1.add(amountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 140, -1));
        jPanel1.add(mobileLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, 20, 20));
        jPanel1.add(amountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 20, 20));

        jLabel4.setText("Mobile:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 130, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Send Money to other users");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 240, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean clientSideValidation(JFrame frame, String mobile, String amount)
    {
      if(Pattern.compile("^\\d{10}$").matcher(mobile).matches())
      {
        if(Pattern.compile("^[0-9.]+$").matcher(amount).matches() && !amount.equals(""))
        {
          return true;
        }
        else
          JOptionPane.showMessageDialog(this, "Please enter the amount in positive numbers.", "Alert", JOptionPane.WARNING_MESSAGE);
      }
      else
        JOptionPane.showMessageDialog(this, "Please enter a valid mobile number.", "Alert", JOptionPane.WARNING_MESSAGE);
      return false;
    }
    private void sendMoneyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMoneyButtonActionPerformed
        // TODO add your handling code here:
        String mobile = mobileField.getText().trim();
        String amount = amountField.getText().trim();
        boolean passed = clientSideValidation(this, mobile, amount);
        if(passed)
        {
          try
          {
            double money = Double.parseDouble(amount);
            MySql.createConn();
            String query = "select mobile, balance from users where username = " + "\'" + userNameLabel.getText() + "\'" + ";";
            ResultSet rs = MySql.selectQuery(query);
            rs.next();
            String userMobile = rs.getString(1);
            double balance = rs.getDouble(2);
            double available_balance = balance - money;
            if(mobile.equals(userMobile))
            {
              JOptionPane.showMessageDialog(this, "You can't send money to your own mobile number, \nplease choose another number.", "Alert", JOptionPane.WARNING_MESSAGE);
              return;
            }
            if(available_balance < 0)
            {
              JOptionPane.showMessageDialog(this, "The available wallet balance is less than the amount \nthat you're trying to send.", "Alert", JOptionPane.WARNING_MESSAGE);
              return;
            }
            query = "update users set balance = balance + " + money + " where mobile = " + "\'" + mobile + "\'" + ";";
            int res = MySql.insertUpdateQuery(query);
            query = "select username from users where mobile = " + "\'" + mobile + "\'" + ";";
            rs = MySql.selectQuery(query);
            rs.next();            
            if(res > 0)
            {
              String sentToUserName = rs.getString(1);
              JOptionPane.showMessageDialog(this, "Amount sent to " + sentToUserName + " successfully.", null, JOptionPane.OK_OPTION);
              query = "update users set balance = balance - " + money + " where username = " + "\'" + userNameLabel.getText() + "\'" + ";";
              res = MySql.insertUpdateQuery(query);
              if(res > 0)
              {
                balanceLabel.setText("$ " + available_balance);
              }
            }
            else
              JOptionPane.showMessageDialog(this, "The user with the given mobile number doesn't exist.", "Alert", JOptionPane.WARNING_MESSAGE);
          } 
          catch(SQLException ex)
          {
            System.out.println(ex);
          }
          finally
          {
            MySql.shutDownConn();
          }
        }
    }//GEN-LAST:event_sendMoneyButtonActionPerformed

    private void mobileFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileFieldKeyReleased
        // TODO add your handling code here:
        String mobile = mobileField.getText().trim();
        if(Pattern.compile("^\\d{10}$").matcher(mobile).matches() && !mobile.equals(""))
        {
          ImageIcon icon = new ImageIcon("target/classes/images/accept.png");
          Image img = icon.getImage();               
          Image imgScale = img.getScaledInstance(mobileLabel.getWidth(), mobileLabel.getHeight(), Image.SCALE_SMOOTH);
          ImageIcon scaledIcon = new ImageIcon(imgScale);  
          mobileLabel.setIcon(scaledIcon);
        }
        else
        {
          
          ImageIcon icon = new ImageIcon("target/classes/images/cross.png");
          mobileLabel.setIcon(icon);
        }
    }//GEN-LAST:event_mobileFieldKeyReleased

    private void amountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountFieldKeyReleased
        // TODO add your handling code here:
        String amount = amountField.getText().trim();
        if(Pattern.compile("^[0-9.]+$").matcher(amount).matches() && !amount.equals(""))
        {
          ImageIcon icon = new ImageIcon("target/classes/images/accept.png");
          Image img = icon.getImage();                
          Image imgScale = img.getScaledInstance(amountLabel.getWidth(), amountLabel.getHeight(), Image.SCALE_SMOOTH);
          ImageIcon scaledIcon = new ImageIcon(imgScale);  
          amountLabel.setIcon(scaledIcon);
        }
        else
        {
          
          ImageIcon icon = new ImageIcon("target/classes/images/cross.png");
          amountLabel.setIcon(icon);
        }
    }//GEN-LAST:event_amountFieldKeyReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoneyToOthersWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoneyToOthersWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoneyToOthersWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoneyToOthersWallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoneyToOthersWallet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mobileField;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JButton sendMoneyButton;
    // End of variables declaration//GEN-END:variables
}
